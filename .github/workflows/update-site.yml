name: Mettre à jour GitHub Pages

# Déclencher ce workflow automatiquement selon un planning et aussi manuellement si nécessaire
on:
  schedule:
    # Exécution quotidienne à 02:00 UTC (vous pouvez adapter l'expression cron selon vos besoins)
    - cron: '0 2 * * *'
  workflow_dispatch: {}  # Permet de déclencher le workflow manuellement depuis l'interface GitHub

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code du dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Installer Python (à la version 3.x)
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Étape 3 : Installer les dépendances nécessaires
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Installez les packages requis par votre script
          pip install pandas joblib sqlalchemy python-dotenv prettytable

      # Étape 4 : Exécuter votre script pour mettre à jour le fichier HTML
      - name: Run update script
        run: |
          python app_trainV31.py

      # Étape 5 : Vérifier si des modifications ont été effectuées et les pousser
      - name: Commit and push changes if any
        run: |
          # Configurez Git avec vos informations utilisateur
          git config --global user.email "FranckMarcelinEKOUM@hotmail.com"
          git config --global user.name "FranckMarcelinEKOUM"

          # Vérifiez s'il y a des modifications (ici, nous vérifions tout, mais vous pouvez cibler un fichier spécifique)
          if [ -n "$(git status --porcelain)" ]; then
              echo "Modifications détectées, commit et push..."
              git add .
              git commit -m "Mise à jour automatique de predictions.html [skip ci]"
              git push origin HEAD
          else
              echo "Aucun changement à committer."
          fi
        env:
          # Le token GitHub est automatiquement fourni par GitHub Actions dans l'environnement
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
